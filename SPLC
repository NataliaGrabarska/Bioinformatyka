DNA_codon_table = {
    'TTT': 'F',     'CTT': 'L',     'ATT': 'I',     'GTT': 'V',
    'TTC': 'F',     'CTC': 'L',     'ATC': 'I',     'GTC': 'V',
    'TTA': 'L',     'CTA': 'L',     'ATA': 'I',     'GTA': 'V',
    'TTG': 'L',     'CTG': 'L',     'ATG': 'M',     'GTG': 'V',
    'TCT': 'S',     'CCT': 'P',     'ACT': 'T',     'GCT': 'A',
    'TCC': 'S',     'CCC': 'P',     'ACC': 'T',     'GCC': 'A',
    'TCA': 'S',     'CCA': 'P',     'ACA': 'T',     'GCA': 'A',
    'TCG': 'S',     'CCG': 'P',     'ACG': 'T',     'GCG': 'A',
    'TAT': 'Y',     'CAT': 'H',     'AAT': 'N',     'GAT': 'D',
    'TAC': 'Y',     'CAC': 'H',     'AAC': 'N',     'GAC': 'D',
    'TAA': '-',     'CAA': 'Q',     'AAA': 'K',     'GAA': 'E',
    'TAG': '-',     'CAG': 'Q',     'AAG': 'K',     'GAG': 'E',
    'TGT': 'C',     'CGT': 'R',     'AGT': 'S',     'GGT': 'G',
    'TGC': 'C',     'CGC': 'R',     'AGC': 'S',     'GGC': 'G',
    'TGA': '-',     'CGA': 'R',     'AGA': 'R',     'GGA': 'G',
    'TGG': 'W',     'CGG': 'R',     'AGG': 'R',     'GGG': 'G'
}

DNA = 'ATGGTCTACATAGCTGACAAACAGCACGTAGCAATCGGTCGAATCTCGAGAGGCATATGGTCACATGATCGGTCGAGCGTGTTTCAAAGTTTGCGCCTAG'      #DNA string from the exercise
intron1 = 'ATCGGTCGAA'
intron2 = 'ATCGGTCGAGCGTGT'       #two introns from the exercise

    
for i in intron1:
    DNAi = DNA.replace(intron1, '')           #for loop deleting first itron from the DNA string
        
for j in intron2:
    DNAj = DNAi.replace(intron2, '')          #for loop deleting second itron from the DNAi string
    
def protein(DNAj):                             #function 'protein(DNAj)' which changes codons into proteins
    result = '' 
    
    for i in range(0, len(DNAj), 3):    #for loop changing every three letters into adequate characters from the 'DNA_codon_table'        
        codon = DNA_codon_table[DNAj[i:i+3]]
        if codon == '-':                #if statement which ends the loop when codon '-' (Stop) appears
            break 
        result += codon                  #'result' summing up all proteins in the DNA string
        
    return result

print(protein(DNAj))
